{"version":3,"file":"static/js/5738.b5eb6a7e.chunk.js","mappings":"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","sources":["keycloak-theme/login/pages/Login.tsx","../node_modules/keycloakify/src/lib/useGetClassName.ts","../node_modules/keycloakify/src/login/lib/useGetClassName.ts","../node_modules/keycloakify/src/tools/clsx.ts","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/tsafe/src/typeGuard.ts"],"sourcesContent":["import { useState, type FormEventHandler } from \"react\";\nimport { clsx } from \"keycloakify/tools/clsx\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\n\nconst my_custom_param = new URL(window.location.href).searchParams.get(\n  \"my_custom_param\"\n);\n\nif (my_custom_param !== null) {\n  console.log(\"my_custom_param:\", my_custom_param);\n}\n\n// comment was made so i can commit\n\nexport default function Login(\n  props: PageProps<Extract<KcContext, { pageId: \"login.ftl\" }>, I18n>\n) {\n  const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n  const { getClassName } = useGetClassName({\n    doUseDefaultCss,\n    classes,\n  });\n\n  const {\n    social,\n    realm,\n    url,\n    usernameHidden,\n    login,\n    auth,\n    registrationDisabled,\n  } = kcContext;\n\n  const { msg, msgStr } = i18n;\n\n  const [isLoginButtonDisabled, setIsLoginButtonDisabled] = useState(false);\n\n  const onSubmit = useConstCallback<FormEventHandler<HTMLFormElement>>((e) => {\n    e.preventDefault();\n\n    setIsLoginButtonDisabled(true);\n\n    const formElement = e.target as HTMLFormElement;\n\n    //NOTE: Even if we login with email Keycloak expect username and password in\n    //the POST request.\n    formElement\n      .querySelector(\"input[name='email']\")\n      ?.setAttribute(\"name\", \"username\");\n\n    formElement.submit();\n  });\n\n  return (\n    <Template\n      {...{ kcContext, i18n, doUseDefaultCss, classes }}\n      displayInfo={social.displayInfo}\n      displayWide={realm.password && social.providers !== undefined}\n      headerNode={msg(\"doLogIn\")}\n      infoNode={\n        realm.password &&\n        realm.registrationAllowed &&\n        !registrationDisabled && (\n          <div id=\"kc-registration\">\n            <span>\n              {msg(\"noAccount\")}\n              <a tabIndex={6} href={url.registrationUrl}>\n                {msg(\"doRegister\")}\n              </a>\n            </span>\n          </div>\n        )\n      }\n    >\n      <div\n        id=\"kc-form\"\n        className={clsx(\n          realm.password &&\n            social.providers !== undefined &&\n            getClassName(\"kcContentWrapperClass\")\n        )}\n      >\n        <div\n          id=\"kc-form-wrapper\"\n          className={clsx(\n            realm.password &&\n              social.providers && [\n                getClassName(\"kcFormSocialAccountContentClass\"),\n                getClassName(\"kcFormSocialAccountClass\"),\n              ]\n          )}\n        >\n          {realm.password && (\n            <form\n              id=\"kc-form-login\"\n              onSubmit={onSubmit}\n              action={url.loginAction}\n              method=\"post\"\n            >\n              <div className={getClassName(\"kcFormGroupClass\")}>\n                {!usernameHidden &&\n                  (() => {\n                    const label = !realm.loginWithEmailAllowed\n                      ? \"username\"\n                      : realm.registrationEmailAsUsername\n                      ? \"email\"\n                      : \"usernameOrEmail\";\n\n                    const autoCompleteHelper: typeof label =\n                      label === \"usernameOrEmail\" ? \"username\" : label;\n\n                    return (\n                      <>\n                        <label\n                          htmlFor={autoCompleteHelper}\n                          className={getClassName(\"kcLabelClass\")}\n                        >\n                          {msg(label)}\n                        </label>\n                        <input\n                          tabIndex={1}\n                          id={autoCompleteHelper}\n                          className={getClassName(\"kcInputClass\")}\n                          //NOTE: This is used by Google Chrome auto fill so we use it to tell\n                          //the browser how to pre fill the form but before submit we put it back\n                          //to username because it is what keycloak expects.\n                          name={autoCompleteHelper}\n                          defaultValue={login.username ?? \"\"}\n                          type=\"text\"\n                          autoFocus={true}\n                          autoComplete=\"off\"\n                        />\n                      </>\n                    );\n                  })()}\n              </div>\n              <div className={getClassName(\"kcFormGroupClass\")}>\n                <label\n                  htmlFor=\"password\"\n                  className={getClassName(\"kcLabelClass\")}\n                >\n                  {msg(\"password\")}\n                </label>\n                <input\n                  tabIndex={2}\n                  id=\"password\"\n                  className={getClassName(\"kcInputClass\")}\n                  name=\"password\"\n                  type=\"password\"\n                  autoComplete=\"off\"\n                />\n              </div>\n              <div\n                className={clsx(\n                  getClassName(\"kcFormGroupClass\"),\n                  getClassName(\"kcFormSettingClass\")\n                )}\n              >\n                <div id=\"kc-form-options\">\n                  {realm.rememberMe && !usernameHidden && (\n                    <div className=\"checkbox\">\n                      <label>\n                        <input\n                          tabIndex={3}\n                          id=\"rememberMe\"\n                          name=\"rememberMe\"\n                          type=\"checkbox\"\n                          {...(login.rememberMe === \"on\"\n                            ? {\n                                checked: true,\n                              }\n                            : {})}\n                        />\n                        {msg(\"rememberMe\")}\n                      </label>\n                    </div>\n                  )}\n                </div>\n                <div className={getClassName(\"kcFormOptionsWrapperClass\")}>\n                  {realm.resetPasswordAllowed && (\n                    <span>\n                      <a tabIndex={5} href={url.loginResetCredentialsUrl}>\n                        {msg(\"doForgotPassword\")}\n                      </a>\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div\n                id=\"kc-form-buttons\"\n                className={getClassName(\"kcFormGroupClass\")}\n              >\n                <input\n                  type=\"hidden\"\n                  id=\"id-hidden-input\"\n                  name=\"credentialId\"\n                  {...(auth?.selectedCredential !== undefined\n                    ? {\n                        value: auth.selectedCredential,\n                      }\n                    : {})}\n                />\n                <input\n                  tabIndex={4}\n                  className={clsx(\n                    getClassName(\"kcButtonClass\"),\n                    getClassName(\"kcButtonPrimaryClass\"),\n                    getClassName(\"kcButtonBlockClass\"),\n                    getClassName(\"kcButtonLargeClass\")\n                  )}\n                  name=\"login\"\n                  id=\"kc-login\"\n                  type=\"submit\"\n                  value={msgStr(\"doLogIn\")}\n                  disabled={isLoginButtonDisabled}\n                />\n              </div>\n            </form>\n          )}\n        </div>\n        {realm.password && social.providers !== undefined && (\n          <div\n            id=\"kc-social-providers\"\n            className={clsx(\n              getClassName(\"kcFormSocialAccountContentClass\"),\n              getClassName(\"kcFormSocialAccountClass\")\n            )}\n          >\n            <ul\n              className={clsx(\n                getClassName(\"kcFormSocialAccountListClass\"),\n                social.providers.length > 4 &&\n                  getClassName(\"kcFormSocialAccountDoubleListClass\")\n              )}\n            >\n              {social.providers.map((p) => (\n                <li\n                  key={p.providerId}\n                  className={getClassName(\"kcFormSocialAccountListLinkClass\")}\n                >\n                  <a\n                    href={p.loginUrl}\n                    id={`zocial-${p.alias}`}\n                    className={clsx(\"zocial\", p.providerId)}\n                  >\n                    <span>{p.displayName}</span>\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    </Template>\n  );\n}\n","import { clsx } from \"keycloakify/tools/clsx\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\n\nexport function createUseClassName<ClassKey extends string>(params: { defaultClasses: Record<ClassKey, string | undefined> }) {\n    const { defaultClasses } = params;\n\n    function useGetClassName(params: { doUseDefaultCss: boolean; classes: Partial<Record<ClassKey, string>> | undefined }) {\n        const { classes } = params;\n\n        const getClassName = useConstCallback((classKey: ClassKey): string => {\n            return clsx(classKey, defaultClasses[classKey], classes?.[classKey]);\n        });\n\n        return { getClassName };\n    }\n\n    return { useGetClassName };\n}\n","import { createUseClassName } from \"keycloakify/lib/useGetClassName\";\nimport type { ClassKey } from \"keycloakify/login/TemplateProps\";\n\nexport const { useGetClassName } = createUseClassName<ClassKey>({\n    \"defaultClasses\": {\n        \"kcBodyClass\": undefined,\n        \"kcHtmlClass\": \"login-pf\",\n        \"kcLoginClass\": \"login-pf-page\",\n        \"kcContentWrapperClass\": \"row\",\n        \"kcHeaderClass\": \"login-pf-page-header\",\n        \"kcHeaderWrapperClass\": undefined,\n        \"kcFormCardClass\": \"card-pf\",\n        \"kcFormCardAccountClass\": \"login-pf-accounts\",\n        \"kcFormSocialAccountClass\": \"login-pf-social-section\",\n        \"kcFormSocialAccountContentClass\": \"col-xs-12 col-sm-6\",\n        \"kcFormHeaderClass\": \"login-pf-header\",\n        \"kcLocaleWrapperClass\": undefined,\n        \"kcFeedbackErrorIcon\": \"pficon pficon-error-circle-o\",\n        \"kcFeedbackWarningIcon\": \"pficon pficon-warning-triangle-o\",\n        \"kcFeedbackSuccessIcon\": \"pficon pficon-ok\",\n        \"kcFeedbackInfoIcon\": \"pficon pficon-info\",\n        \"kcResetFlowIcon\": \"pficon pficon-arrow fa-2x\",\n        \"kcFormGroupClass\": \"form-group\",\n        \"kcLabelWrapperClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcSignUpClass\": \"login-pf-signup\",\n        \"kcInfoAreaWrapperClass\": undefined,\n\n        \"kcLogoClass\": \"login-pf-brand\",\n        \"kcContainerClass\": \"container-fluid\",\n        \"kcContentClass\": \"col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-6 col-lg-offset-3\",\n        \"kcFeedbackAreaClass\": \"col-md-12\",\n        \"kcLocaleClass\": \"col-xs-12 col-sm-1\",\n        \"kcAlertIconClasserror\": \"pficon pficon-error-circle-o\",\n\n        \"kcFormAreaClass\": \"col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 col-lg-8 col-lg-offset-2\",\n        \"kcFormSocialAccountListClass\": \"login-pf-social list-unstyled login-pf-social-all\",\n        \"kcFormSocialAccountDoubleListClass\": \"login-pf-social-double-col\",\n        \"kcFormSocialAccountListLinkClass\": \"login-pf-social-link\",\n        \"kcWebAuthnKeyIcon\": \"pficon pficon-key\",\n        \"kcWebAuthnDefaultIcon\": \"pficon pficon-key\",\n\n        \"kcFormClass\": \"form-horizontal\",\n        \"kcFormGroupErrorClass\": \"has-error\",\n        \"kcLabelClass\": \"control-label\",\n        \"kcInputClass\": \"form-control\",\n        \"kcInputErrorMessageClass\": \"pf-c-form__helper-text pf-m-error required kc-feedback-text\",\n        \"kcInputWrapperClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormButtonsWrapperClass\": undefined,\n        \"kcFormOptionsClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormButtonsClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormSettingClass\": \"login-pf-settings\",\n        \"kcTextareaClass\": \"form-control\",\n\n        \"kcInfoAreaClass\": \"col-xs-12 col-sm-4 col-md-4 col-lg-5 details\",\n\n        // user-profile grouping\n        \"kcFormGroupHeader\": \"pf-c-form__group\",\n\n        // css classes for form buttons main class used for all buttons\n        \"kcButtonClass\": \"btn\",\n        // classes defining priority of the button - primary or default (there is typically only one priority button for the form)\n        \"kcButtonPrimaryClass\": \"btn-primary\",\n        \"kcButtonDefaultClass\": \"btn-default\",\n        // classes defining size of the button\n        \"kcButtonLargeClass\": \"btn-lg\",\n        \"kcButtonBlockClass\": \"btn-block\",\n\n        // css classes for input\n        \"kcInputLargeClass\": \"input-lg\",\n\n        // css classes for form accessability\n        \"kcSrOnlyClass\": \"sr-only\",\n\n        // css classes for select-authenticator form\n        \"kcSelectAuthListClass\": \"list-group list-view-pf\",\n        \"kcSelectAuthListItemClass\": \"list-group-item list-view-pf-stacked\",\n        \"kcSelectAuthListItemFillClass\": \"pf-l-split__item pf-m-fill\",\n        \"kcSelectAuthListItemIconPropertyClass\": \"fa-2x select-auth-box-icon-properties\",\n        \"kcSelectAuthListItemIconClass\": \"pf-l-split__item select-auth-box-icon\",\n        \"kcSelectAuthListItemTitle\": \"select-auth-box-paragraph\",\n        \"kcSelectAuthListItemInfoClass\": \"list-view-pf-main-info\",\n        \"kcSelectAuthListItemLeftClass\": \"list-view-pf-left\",\n        \"kcSelectAuthListItemBodyClass\": \"list-view-pf-body\",\n        \"kcSelectAuthListItemDescriptionClass\": \"list-view-pf-description\",\n        \"kcSelectAuthListItemHeadingClass\": \"list-group-item-heading\",\n        \"kcSelectAuthListItemHelpTextClass\": \"list-group-item-text\",\n\n        // css classes for the authenticators\n        \"kcAuthenticatorDefaultClass\": \"fa list-view-pf-icon-lg\",\n        \"kcAuthenticatorPasswordClass\": \"fa fa-unlock list-view-pf-icon-lg\",\n        \"kcAuthenticatorOTPClass\": \"fa fa-mobile list-view-pf-icon-lg\",\n        \"kcAuthenticatorWebAuthnClass\": \"fa fa-key list-view-pf-icon-lg\",\n        \"kcAuthenticatorWebAuthnPasswordlessClass\": \"fa fa-key list-view-pf-icon-lg\",\n\n        //css classes for the OTP Login Form\n        \"kcSelectOTPListClass\": \"card-pf card-pf-view card-pf-view-select card-pf-view-single-select\",\n        \"kcSelectOTPListItemClass\": \"card-pf-body card-pf-top-element\",\n        \"kcAuthenticatorOtpCircleClass\": \"fa fa-mobile card-pf-icon-circle\",\n        \"kcSelectOTPItemHeadingClass\": \"card-pf-title text-center\",\n        \"kcFormOptionsWrapperClass\": undefined\n    }\n});\n","import { assert } from \"tsafe/assert\";\nimport { typeGuard } from \"tsafe/typeGuard\";\n\nexport type CxArg = undefined | null | string | boolean | Partial<Record<string, boolean | null | undefined>> | readonly CxArg[];\n\nexport const clsx = (...args: CxArg[]): string => {\n    const len = args.length;\n    let i = 0;\n    let cls = \"\";\n    for (; i < len; i++) {\n        const arg = args[i];\n        if (arg == null) continue;\n\n        let toAdd;\n        switch (typeof arg) {\n            case \"boolean\":\n                break;\n            case \"object\": {\n                if (Array.isArray(arg)) {\n                    toAdd = clsx(...arg);\n                } else {\n                    assert(!typeGuard<{ length: number }>(arg, false));\n\n                    toAdd = \"\";\n                    for (const k in arg) {\n                        if (arg[k as string] && k) {\n                            toAdd && (toAdd += \" \");\n                            toAdd += k;\n                        }\n                    }\n                }\n                break;\n            }\n            default: {\n                toAdd = arg;\n            }\n        }\n        if (toAdd) {\n            cls && (cls += \" \");\n            cls += toAdd;\n        }\n    }\n    return cls;\n};\n","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/** https://docs.tsafe.dev/typeguard */\nexport function typeGuard<T>(_value: any, isMatched: boolean): _value is T {\n    return isMatched;\n}\n"],"names":["my_custom_param","URL","window","location","href","searchParams","get","Login","props","kcContext","i18n","doUseDefaultCss","Template","classes","getClassName","useGetClassName","social","realm","url","usernameHidden","login","auth","registrationDisabled","msg","msgStr","_useState","useState","_useState2","_slicedToArray","isLoginButtonDisabled","setIsLoginButtonDisabled","onSubmit","useConstCallback","e","_formElement$querySel","preventDefault","formElement","target","querySelector","setAttribute","submit","_jsx","displayInfo","displayWide","password","undefined","providers","headerNode","infoNode","registrationAllowed","id","children","_jsxs","tabIndex","registrationUrl","className","clsx","action","loginAction","method","_login$username","label","loginWithEmailAllowed","registrationEmailAsUsername","autoCompleteHelper","_Fragment","htmlFor","name","defaultValue","username","type","autoFocus","autoComplete","rememberMe","_objectSpread","checked","resetPasswordAllowed","loginResetCredentialsUrl","selectedCredential","value","disabled","length","map","p","loginUrl","concat","alias","providerId","displayName","console","log","createUseClassName","params","defaultClasses","classKey","len","arguments","i","cls","arg","toAdd","Array","isArray","apply","_toConsumableArray","k","assert","typeGuard","_toPropertyKey","key","input","hint","prim","Symbol","toPrimitive","res","call","TypeError","String","Number","_defineProperty","obj","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","_objectSpread2","source","forEach","getOwnPropertyDescriptors","defineProperties","_value","isMatched"],"sourceRoot":""}